<!DOCTYPE HTML>
<html>
	<head>
	<title>Footwear - Free Bootstrap 4 Template by Colorlib</title>
   <meta charset="utf-8">
   <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

	<link href="https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600,700" rel="stylesheet">
	<link href="https://fonts.googleapis.com/css?family=Rokkitt:100,300,400,700" rel="stylesheet">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">

	<!-- Animate.css -->
	<link rel="stylesheet" href="css/animate.css">
	<!-- Icomoon Icon Fonts-->
	<link rel="stylesheet" href="css/icomoon.css">
	<!-- Ion Icon Fonts-->
	<link rel="stylesheet" href="css/ionicons.min.css">
	<!-- Bootstrap  -->
	<link rel="stylesheet" href="css/bootstrap.min.css">

	<!-- Magnific Popup -->
	<link rel="stylesheet" href="css/magnific-popup.css">

	<!-- Flexslider  -->
	<link rel="stylesheet" href="css/flexslider.css">

	<!-- Owl Carousel -->
	<link rel="stylesheet" href="css/owl.carousel.min.css">
	<link rel="stylesheet" href="css/owl.theme.default.min.css">
	
	<!-- Date Picker -->
	<link rel="stylesheet" href="css/bootstrap-datepicker.css">
	<!-- Flaticons  -->
	<link rel="stylesheet" href="fonts/flaticon/font/flaticon.css">

	<!-- Theme style  -->
	<link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/style1.css">

	</head>
	<body>
		
	<!-- <div class="colorlib-loader"></div> -->
	<header>
		<div id="page">
			<nav class="colorlib-nav" role="navigation">
				<div class="top-menu">
					<div class="container">
						<div class="row">
							<div class="col-sm-7 col-md-9">
								<div id="colorlib-logo"><a href="/"><img src="../../images/Screenshot_2024-10-26_152034-removebg-preview.png" style="height:50px; width:170px"></a></div>
							</div>
							<div class="col-sm-5 col-md-3">
							<form action="#" class="search-wrap">
							   <div class="form-group">
								  <input type="search" class="form-control search" placeholder="Search">
								  <button class="btn btn-primary submit-search text-center" type="submit"><i class="icon-search"></i></button>
							   </div>
							</form>
						 </div>
					 </div>
						<div class="row">
							<div class="col-sm-12 text-left menu-1">
								<ul>
									<li><a href="/">Home</a></li>
									<li><a href="/shop">Shop</a></li>
									<li><a href="#">About</a></li>
									<li><a href="#">Contact</a></li>
									<li><a href="/myaccount">My Account</a></li>
								
									<% if (!user) { %>
                                        <li class="cart"><a href="/login">Login / Register</a></li>
                                    <% } else { %>
                                        <li class="cart"><a href="/logout">Logout</a></li>
                                    <% } %>
									
									<li class="cart"><a href="/cart"><i class="icon-shopping-cart"></i> Cart <span id="cart-count" class="badge badge-danger"><%= cartCount %></span></a></li>
								<li class="cart"><a href="/wishlist">Wishlist</a><span id="wishlist-count" class="badge badge-danger"><%= wishlistCount %></span></li>
								</ul>
							</div>
						</div>
					</div>
				</div>
				<div class="sale">
					<div class="container">
						<div class="row">
							<div class="col-sm-8 offset-sm-2 text-center">
								<div class="row">
									<div class="owl-carousel2">
										<div class="item">
											<div class="col">
												<h3><a href="#">25% off (Almost) Everything! Use Code: Summer Sale</a></h3>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</nav>
		</header>
        <nav id="user-dashboard-nav">
            <div class="dashboard-menu">
                <a href="/myaccount" class="dashboard-link">PROFILE</a>
                <a href="/myaccountorder" class="dashboard-link">ORDERS</a>
                <a href="/address" class="dashboard-link">ADDRESS</a>
                <a href="/updateprofile/<%= user.id %>" class="dashboard-link">UPDATE PROFILE</a>
                <% if(user&&user.isGoogleLogin==false) {%>
				<a href="/updatepassword/<%= user.id %>" class="dashboard-link">UPDATE PASSWORD</a>
				<% } %>
                <a href="/wallet" class="dashboard-link">WALLET</a>
                <a href="/logout" id="logout-button">LOGOUT</a>
            </div>
        </nav>
    
        <main id="orders-section">
            <h2 class="section-title">Your Orders</h2>
            <table id="orders-grid">
                <thead>
                    <tr>
                        <th>Order ID</th>
                        <th>Date</th>
                        <th>Status</th>
                        <th>Payment Status</th>
                        <th>Total</th>
                        <th>Order Details</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
					<% orders.forEach((order,index) => { %>
                    <tr>
                        <td>#111<%= index %></td>
                        <td><%= order.createdAt.toLocaleDateString() %></td>
                        <td><%= order.status %></td>
                        <td><%= order.paymentStatus %>
						<% if(order.paymentMethod=="Razorpay"&&order.paymentStatus=="Pending"){ %>
						<button style="background-color: transparent; border: none;" class="retrybtn" id="retrybutton" data-id="<%= order._id %>"><i class="bi bi-arrow-clockwise"></i></button>
						<% } %></td>
                        <td><%= order.totalAmount %></td>
                        <td><a href="userorderview/<%= order._id %>" class="action-btn">View</a></td>
                        <td>
							<% if (order.status === 'Delivered') { %>
								<button class="btn btn-primary returnorderbtn" data-id="<%= order._id %>">Request Return</button>
							<% } else if (order.status === 'Pending') { %>
								<button class="btn btn-danger cancelorderbtn" data-id="<%= order._id %>">Cancel Order</button>
							<% } else { %>
								<button class="btn disabled" disabled>No Action</button>
							<% } %>
						</td>
                    </tr>
                <% }); %>
                </tbody>
            </table>

			<nav aria-label="Order Pagination">
				<ul class="pagination justify-content-center">
					<% if (currentPage > 1) { %>
						<li class="page-item">
							<a class="page-link" href="?page=<%= currentPage - 1 %>">Previous</a>
						</li>
					<% } %>
					<% for (let i = 1; i <= totalPages; i++) { %>
						<li class="page-item <%= i === currentPage ? 'active' : '' %>">
							<a class="page-link" href="?page=<%= i %>"><%= i %></a>
						</li>
					<% } %>
					<% if (currentPage < totalPages) { %>
						<li class="page-item">
							<a class="page-link" href="?page=<%= currentPage + 1 %>">Next</a>
						</li>
					<% } %>
				</ul>
			</nav>
        </main>
		<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
		<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
        <%- include("./layouts/footer") %>

		<script>

document.querySelectorAll('.cancelorderbtn').forEach(button => {
        button.addEventListener('click', async () => {
            const orderId = button.getAttribute('data-id');

			try {
                    const response = await fetch(`/cancelorder/${orderId}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
						body: JSON.stringify({ orderId: orderId })
                    });
					const result = await response.json();
                    if (result.success) {
                        Swal.fire({
							text:result.message,
							icon:"success"
						})
						button.textContent = "Order Canceled";
						button.disabled = true;
						button.classList.add('disabled');

						const row = button.closest('tr');
						const statusCell = row.querySelector('td:nth-child(3)');
						if (statusCell) {
							statusCell.textContent = "Cancelled";
						}
                    } else {
                        Swal.fire({
							text:result.message,
                            icon:"error"
						})
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
						text: "An error occurred while canceling the order",
                        icon:"error"
					})
                }
			});
		});

		</script>

		<script>

        const returnButtons = document.querySelectorAll(".returnorderbtn");

        returnButtons.forEach(button => {
            button.addEventListener("click", async (e) => {
                const orderId = e.target.dataset.id;

				const { value: reason } = await Swal.fire({
                    title: 'Request Return',
                    input: 'textarea',
                    inputLabel: 'Reason for Return',
                    inputPlaceholder: 'Enter your reason here...',
                    inputAttributes: {
                        'aria-label': 'Enter your reason here'
                    },
                    showCancelButton: true,
                    confirmButtonText: 'Submit',
                    cancelButtonText: 'Cancel',
                    inputValidator: (value) => {
                        if (!value) {
                            return 'You need to write a reason!';
                        }
                    }
                });

                if (reason) {
                    try {
                        const response = await fetch('/requestreturn', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ orderId, reason })
                        });

                        const data = await response.json();

                        if (data.success) {
                            Swal.fire('Success!', 'Your return request has been submitted.', 'success');
                        } else {
                            Swal.fire('Error!', 'Something went wrong. Try again later.', 'error');
                        }
                    } catch (error) {
                        Swal.fire('Error!', 'Failed to send request. Please try again.', 'error');
                    }
                }
            });
        });
		</script>

		<script>

			document.querySelectorAll(".retrybtn").forEach(button => {
				button.addEventListener("click",async(e)=>{

					e.preventDefault()

					let button=document.getElementById("retrybutton")
					button=e.currentTarget
					let orderId=button.getAttribute("data-id")

					try {
						const response=await fetch(`/retrypayment/${orderId}`,{
							method:"PUT",
							headers:{"Content-Type":"application/json"},
						})
						const orderResult = await response.json();

						if (!orderResult.success) {
							return Swal.fire({
								text: orderResult.message,
								icon: "error",
							});
						}

						const options = {
							key: orderResult.razorpayKey,
							amount: orderResult.amount,
							currency: orderResult.currency,
							name: "TAKRUM",
							description: "Order Payment",
							order_id: orderResult.razorpayOrderId,
							handler: async function (response) {
								const { razorpay_payment_id, razorpay_order_id, razorpay_signature } = response;
								const verifyResponse = await fetch("/verifypayment", {
									method: "POST",
									headers: {
										"Content-Type": "application/json",
									},
									body: JSON.stringify({
										razorpay_payment_id: razorpay_payment_id,
										razorpay_order_id: razorpay_order_id,
										razorpay_signature: razorpay_signature,
										paymentMethod: "Razorpay",
									}),
								});

								const verifyResult = await verifyResponse.json();

								if (verifyResult.success) {
									Swal.fire({
										text: verifyResult.message,
										icon: "success",
									});
									setTimeout(() => {
										window.location.href = "/ordercomplete";
									}, 1000);
								} else {
									Swal.fire({
										text: verifyResult.message || "Payment verification failed.",
										icon: "error",
									});
								}
							},
							theme: {
								color: "#3399cc",
							},
						};

						const rzp = new Razorpay(options);
						rzp.on("payment.failed",function (response){
							Swal.fire({
							icon: "info",
							title: "Payment Incomplete",
							text:
								"The payment could not be completed. The order has been placed but payment was not successful. Please try again.",
							}).then((result) => {
							if (result.isConfirmed || result.dismiss === Swal.DismissReason.close) {
								window.location.href = "/myaccountorder";
							}
							});
						});

						rzp.close()
						rzp.open();

					} catch (error) {
						console.error(error);
						Swal.fire({
							text: "Failed to complete payment. Please try again later.",
							icon: "error",
						});
					}
				})
				})
		</script>
		
    </body>
    </html>