<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Admin Panel</title>
    <link rel="stylesheet" href="/css/admin.css">
  </head>
  <body>
    <div class="container-scroller">
      <%- include("./layouts/aheader") %>
      
      <div class="container">
        <h2 class="pt-5">Update Category</h2>
<form id="updatecategory">
  <div class="form-group">

    <input type="hidden" id="categoryId" name="categoryId" value="<%= category.id %>">

    <label for="name" class="pt-3">Category Name</label>
    <input type="text" id="categoryName" name="categoryName" class="form-control mb-3" value="<%= category.name %>" required>

    <label for="description" class="pt-3">Category Description</label>
    <input type="text" id="categoryDescription" name="categoryDescription" class="form-control mb-3" value="<%= category.description %>" required>

    <label for="image" class="pt-3">Category Image</label>
    <input type="text" id="categoryImage" name="categoryimage" class="form-control mb-3" value="<%= category.image %>" required>
  </div>

  <button type="submit" class="btn btn-primary mt-3">Save Changes</button>
  <a href="/admin/categorymanagement" class="btn btn-secondary mt-3">Cancel</a>
</form>
</div>
<script>

const updateform=document.getElementById("updatecategory")
updateform.addEventListener("submit",async(e)=>{
    e.preventDefault()
    
    let categoryname=document.getElementById("categoryName").value
    let categorydescription=document.getElementById("categoryDescription").value
    let categoryimage=document.getElementById("categoryImage").value
    let categoryid=document.querySelector("input[name='categoryId']").value
    
    try {
    const response=await fetch(`/admin/categorymanagement/update/${categoryid}`,{
        method:"PUT",
        headers:{
            "Content-Type":"application/json"
        },
        body:JSON.stringify({
            categoryname,
            categorydescription,
            categoryimage,
            categoryid
        })
    })
    const data = await response.json();
        if (data.success) {
          alert('Category updated successfully!');
          window.location.href = '/admin/categorymanagement';
        } else {
          alert(data.message || 'Failed to update category');
        }
      } catch (error) {
        console.error('Error updating category:', error);
        alert('An error occurred while updating the category.');
}
});
</script>
<script>

document.getElementById("form").addEventListener("submit", (e)=>{
    if(!addCategoryValidate){
      e.preventDefault()
    }
  })

  function addCategoryValidate(){
    let name = document.getElementById("name").value;
    let description = document.getElementById("description").value;
    let msg=document.getElementById("msg")
    let namereg=/^[a-zA-Z\s]+$/
    let desreg=/^(\b\w+\b[\s]*){10,}$/

    if(name.trim() === "" || description.trim() === ""){
      msg.innerHTML ="Please enter a name and description"
      return false;
    }else if(namereg.test(name)){
      msg.innerHTML="Invalid name format. Only alphabets and spaces are allowed."
      return false;
    }
    else if(!desreg.test(description)){
      msg.innerHTML="Invalid description format. Description should contain at least 10 words."
      return false;
    }else{
      msg.innerHTML=""
      return true;
    }
  }
</script>

</script>
</body>
</html>
